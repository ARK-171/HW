import pygame
import os

dir_path = os.path.dirname(__file__)
fps = pygame.time.Clock()
FPS = 80

WIDTH = 1279
HEIGHT = 700

class Player:
    def __init__(self, speed):
        self.picture = [pygame.image.load(os.path.join(dir_path, "sprites\mage\mage.png")),
                        pygame.image.load(os.path.join(dir_path, "sprites\mage\mage2.png"))]
        self.picture1 = [pygame.transform.flip(z, True, False) for z in self.picture]
        self.HP = 100
        self.speed = speed
        self.x = 100
        self.y = 100
        self.state = 0
        self.tik = 0
        self.reload = 0
    def muve(self):
        keys = pygame.key.get_pressed()
        if keys[pygame.K_RIGHT]:
            self.picture = [pygame.image.load(os.path.join(dir_path, "sprites\mage\mage.png")),
                            pygame.image.load(os.path.join(dir_path, "sprites\mage\mage2.png"))]
            self.x += self.speed
            self.state = 1
        if keys[pygame.K_LEFT]:
            self.picture = self.picture1
            self.x -= self.speed
            self.state = -1
        if keys[pygame.K_DOWN]:
            self.y += self.speed
        if keys[pygame.K_UP]:
            self.y -= self.speed
    def showe(self):
        if self.tik < 240:
            self.tik += 1
            win.blit(self.picture[0], (self.x, self.y))
        elif self.tik == 240 or self.tik < 260:
            win.blit(self.picture[1], (self.x, self.y))
            self.tik += 1
        else:
            self.tik = 0
            win.blit(self.picture[0], (self.x, self.y))
        

class fire_ball:
    def __init__(self, x, y, speed):
        self.picture = [pygame.image.load(os.path.join(dir_path, "sprites/fireball/fb0.png")),
                        pygame.image.load(os.path.join(dir_path, "sprites/fireball/fb1.png")),
                        pygame.image.load(os.path.join(dir_path, "sprites/fireball/fb2.png")),
                        pygame.image.load(os.path.join(dir_path, "sprites/fireball/fb3.png"))]
        self.picture1 = [pygame.transform.flip(z, True, False) for z in self.picture]
        self.x = x
        self.y = y
        self.speed = speed
        self.damage = 20
        self.l = 0
        self.state = 0
    def move(self):
        if player.state == 1 and self.l <= 50:
            fireBall[-1].x += fireBall[-1].speed
            self.l += self.speed
        elif player.state == -1 and self.l <= 50:
            self.picture = self.picture1
            fireBall[-1].x -= fireBall[-1].speed
            self.l += self.speed
    def showe(self):
        self.state += 1
        if self.state == 4:
            self.state = 0
        win.blit(self.picture[self.state], (self.x, self.y))
        
def fb():
    if player.reload < 80:
        player.reload += 1
    key = pygame.key.get_pressed()
    if key[pygame.K_SPACE] and player.reload == 80:
        fireBall.append(fire_ball(player.x, player.y, 6))
        player.reload = 0

def colider(Sprite1, Sprite2):
    if ((Sprite1.x <= Sprite2.x <= Sprite.x + Spritel1.rect.width 
        and Sprite1.y <= Sprite2.y <= Sprite1.y + Sprite1.rect.height) 
        or (Sprite2.x <= Sprite2.x + Sprite2.rect.width <= Sprite1.x + Sprite1.rect.width
        and Sprite1.y <= Sprite2.y + Sprite2.rect.height <= Sprite1.y + Sprite1.rect.height)
        or Sprite2.x <= Sprite1.x + Sprite1.rect.width <= Sprite2.x
        and Sprite2.y <= Sprite1.y <= Sprite2.y + Sprite2.rect.height
        or (Sprite2.x <= Sprite1.x <= Sprite2.x + Sprite2.rect.width
        and Sprite2.y <= Sprite1.y + Sprite2.rect.height <= Sprite2.y + Sprite2.rect.height)):
            return True
    else:
        return False

win = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption('Первая игра на Питоне') 

game = True
player = Player(3)
fireBall = []

while game:
    fps.tick(FPS)
    win.fill((0,0,0))
    player.showe()
    player.muve()
    fb()
    if len(fireBall) != 0:
        for i in fireBall:
            i.move()
            i.showe()
            if i.l >= 50:
                del(i)
    for evente in pygame.event.get():
        if evente.type == pygame.QUIT:
            game = False
    pygame.display.update()
pygame.quit()
